name: CI/CD Workflow

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - main

jobs:
  build_backend:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=5s --health-timeout=3s --health-retries=5
        env:
          MYSQL_DATABASE: ${{ secrets.DB_NAME }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker containers
        run: docker-compose -f docker-compose.yml up -d

      - name: Install PHP dependencies
        run: |
          docker-compose exec -T php bash -c "composer install"

      - name: Run Backend Tests
        run: |
          docker-compose exec -T php bash -c "phpunit tests"

  build_frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Frontend dependencies
        run: |
          cd frontend
          npm install

  deploy:
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
    if: success()

    steps:
      - name: Deploy to production (example)
        run: |
          echo "Deploying to Google Cloud Platform..."
